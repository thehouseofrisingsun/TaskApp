@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h1 class="display-4">Weather Analytics</h1>
</div>
<div id="minTemperatureCanvasArea"></div>
<div id="maxWindSpeedCanvasArea"></div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.9.1/chart.min.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script type="text/javascript">
    getMinTemperature();
    getMaxWindSpeed();


    setInterval(function () {
        getMinTemperature();
        getMaxWindSpeed();
    }, 60000);

    function getMinTemperature() {
        $.ajax({
            url: 'Home/MinTemperature',
            type: 'GET',
            success: function (data) {
                if (data) {
                    $("#minTemperatureBar").remove();
                    $("#minTemperatureCanvasArea").append('<canvas id="minTemperatureBar" width="400" height="400"></canvas>');
                    var jsonData = JSON.stringify(data);
                    var minTemperatureData = [];
                    var description = [];

                    for (var i = 0; i < data.length; ++i) {
                        minTemperatureData.push(data[i]["minTemperature"])
                        description.push("(" + new Date(data[i]["lastUpdate"]).toString("yyyy/MM/dd HH:mm:ss") + "), " +
                            data[i]["city"] + ", " +
                            data[i]["country"])
                    }
                    buildMinTemperatureChart(minTemperatureData, description);
                }
            }
        });
    }

    function getMaxWindSpeed() {
        $.ajax({
            url: 'Home/MaxWindSpeed',
            type: 'GET',
            success: function (data) {
                if (data) {
                    $("#maxWindSpeedBar").remove();
                    $("#maxWindSpeedCanvasArea").append('<canvas id="maxWindSpeedBar" width="400" height="400"></canvas>');
                    var jsonData = JSON.stringify(data);
                    var msxWindSpeedData = [];
                    var description = []
                    for (var i = 0; i < data.length; ++i) {
                        msxWindSpeedData.push(data[i]["maxWindSpeed"])
                        description.push("(" + new Date(data[i]["lastUpdate"]).toString("yyyy/MM/dd HH:mm:ss") + "), " +
                            data[i]["city"] + ", " +
                            data[i]["country"])
                    }
                    buildMaxWindSpeedChart(msxWindSpeedData, description);
                }
            }
        });
    }

    function buildMinTemperatureChart(minTemperatureData, description) {
        const ctx = $('#minTemperatureBar');

        const minTemperatureChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: description,
                datasets: [{
                    label: 'min Temperature(Celsius)',
                    data: minTemperatureData,
                    backgroundColor: [
                        'rgba(0, 0, 200, 0.2)',
                    ],
                    borderColor: [
                        'rgba(0, 0, 255, 1)',
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    }


    function buildMaxWindSpeedChart(msxWindSpeedData, description) {
        const ctx = $('#maxWindSpeedBar');

        const msxWindSpeedChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: description,
                datasets: [{
                    label: 'max Wind Speed(Mile/sec)',
                    data: msxWindSpeedData,
                    backgroundColor: [
                        'rgba(0, 200, 0, 0.2)',
                    ],
                    borderColor: [
                        'rgba(0, 255, 0, 1)',
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    }

</script>
